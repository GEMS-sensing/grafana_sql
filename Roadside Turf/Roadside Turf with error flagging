## Soil Temperature

# data

(
(
(SELECT
  "time",
  value*9/5+32,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.Temperature.1.1%' or measure ilike '%Acclima Soil.Temperature.1.2%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.1'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.2'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_ST_MIN or
join1.st > $TDR315H_ST_MAX or
join1.st is null or
svwc.svwc < $TDR315H_ST_MIN or
svwc.svwc > $TDR315H_ST_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
temp1_observations as (
  SELECT
    "time" AS temp1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
),
temp2_observations as (
  SELECT
    "time" AS temp2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (temp1_observation IS NULL) then 1
    WHEN (temp2_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN temp1_observations ON time = temp1_observation  
  LEFT JOIN temp2_observations ON time = temp2_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.1%' or measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil VWC

#data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.VWC.1.2%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.1'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.2'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_VWC_MIN or
join1.st > $TDR315H_VWC_MAX or
join1.st is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc1_observations as (
  SELECT
    "time" AS vwc1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
vwc2_observations as (
  SELECT
    "time" AS vwc2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc1_observation IS NULL) then 1
    WHEN (vwc2_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc1_observations ON time = vwc1_observation  
  LEFT JOIN vwc2_observations ON time = vwc2_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.VWC.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil Bulk EC

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Acclima Soil.EC_BULK.1.1' or measure = 'Acclima Soil.EC_BULK.1.2')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.EC_BULK.1.1'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.EC_BULK.1.2'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR_BEC_Min or
join1.st > $TDR_BEC_Max or
join1.st is null or
svwc.svwc < $TDR_BEC_Min or
svwc.svwc > $TDR_BEC_Max or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
bec1_observations as (
  SELECT
    "time" AS bec1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.1'
    AND node_id = '$node'
),
bec2_observations as (
  SELECT
    "time" AS bec2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (bec1_observation IS NULL) then 1
    WHEN (bec2_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN bec1_observations ON time = bec1_observation  
  LEFT JOIN bec2_observations ON time = bec2_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'Acclima Soil.EC_BULK.1.1' or measure = 'Acclima Soil.EC_BULK.1.2')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Gaseous Oxygen

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Apogee O2.Oxygen_%.1.4')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'Apogee O2.Oxygen_%.1.4' and (value < $Apogee_SO421_MIN or value > $Apogee_SO421_MAX)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'Apogee O2.Oxygen_%.1.4')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
apo2_observations as (
  SELECT
    "time" AS apo2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Oxygen_%.1.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (apo2_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN apo2_observations ON time = apo2_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'Apogee O2.Oxygen_%.1.4')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Raw Data (within current time range)

# raw

(
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
)
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Temperature.1.4'
ORDER BY 1

# SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.1 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $Apogee_SO421_MIN or value > $Apogee_SO421_MAX) then 1
    else 0
  end as value,
  'Apogee O2.Oxygen_%.1.4 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Temperature.1.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $Apogee_SO421temp_min or value > $Apogee_SO421temp_max) then 1
    else 0
  end as value,
  'Apogee O2.Temperature.1.4 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Temperature.1.4'
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# missing value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
bvwc_observations as (
  SELECT
    "time" AS bvwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
),
stemperature_observations as (
  SELECT
    "time" AS stemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
), 
bstemperature_observations as (
  SELECT
    "time" AS bstemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
), 
ecb_observations as (
  SELECT
    "time" AS ecb_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.1'
    AND node_id = '$node'
), 
becb_observations as (
  SELECT
    "time" AS becb_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.2'
    AND node_id = '$node'
), 
pore_observations as (
  SELECT
    "time" AS pore_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_PORE.1.1'
    AND node_id = '$node'
), 
bpore_observations as (
  SELECT
    "time" AS bpore_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_PORE.1.2'
    AND node_id = '$node'
), 
perm_observations as (
  SELECT
    "time" AS perm_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Permitivity.1.1'
    AND node_id = '$node'
), 
bperm_observations as (
  SELECT
    "time" AS bperm_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Permitivity.1.2'
    AND node_id = '$node'
), 
apo2_observations as (
  SELECT
    "time" AS apo2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Oxygen_%.1.4'
    AND node_id = '$node'
), 
apo2temp_observations as (
  SELECT
    "time" AS apo2temp_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Temperature.1.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (bvwc_observation IS NULL) then 1
    WHEN (stemperature_observation is NULL) then 1
    WHEN (bstemperature_observation is NULL) then 1
    WHEN (ecb_observation IS NULL) then 1
    WHEN (becb_observation IS NULL) then 1
    WHEN (pore_observation is NULL) then 1
    WHEN (bpore_observation is NULL) then 1
    WHEN (perm_observation is NULL) then 1
    WHEN (bperm_observation is NULL) then 1
    WHEN (apo2_observation is NULL) then 1
    WHEN (apo2temp_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation
  LEFT JOIN bvwc_observations ON time = bvwc_observation  
  LEFT JOIN stemperature_observations ON time = stemperature_observation
  LEFT JOIN bstemperature_observations ON time = bstemperature_observation
  LEFT JOIN ecb_observations ON time = ecb_observation 
  LEFT JOIN becb_observations ON time = becb_observation 
  LEFT JOIN pore_observations ON time = pore_observation
  LEFT JOIN bpore_observations ON time = bpore_observation
  LEFT JOIN perm_observations ON time = perm_observation
  LEFT JOIN bperm_observations ON time = bperm_observation
  LEFT JOIN apo2_observations ON time = apo2_observation
  LEFT JOIN apo2temp_observations ON time = apo2temp_observation
ORDER BY 1

# std dev

(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Apogee O2.Oxygen_%.1.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Apogee O2.Oxygen_%.1.4 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Apogee O2.Temperature.1.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Apogee O2.Temperature.1.4 Direction Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time


# map - transform label to field

SELECT
  time,
  node_id,
  display_name,
  metric,
  value
FROM
(SELECT
  ROW_NUMBER() OVER (PARTITION BY node_id, measure ORDER BY time DESC) r,
  time,
  value,
  measure as "metric",
  node_id,
  display_name
FROM $project_key.data
WHERE
  node_id = '$node'
  AND measure IN ('Longitude', 'Latitude')
) x
WHERE x.r <= 1
ORDER BY x.time ASC

## Update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;

## SoC

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  max((elems1->'GONK'->'SoC')::float) AS "SoC",
  max((elems1->'GONK'->'CellVAvg')::float/1000) AS "Battery",
  max((elems2->'Kestrel'->'PORT_V'->3)::float) AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems2
WHERE
  $__timeFilter("publish_time") AND node_id = '$node' AND event = 'diagnostic/v2' 
  AND (elems1 ? 'GONK' OR elems2 ? 'Kestrel')
  AND is_valid_json(message) 
  AND is_valid_time(message)
GROUP BY 1
ORDER BY 1

# Battery (bar) - reduce min max mean

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  (elems1->'GONK'->'SoC')::float AS "SoC"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'GONK' 
  AND is_valid_json(message) 
  AND is_valid_time(message)

GROUP BY 1, 2
ORDER BY 1