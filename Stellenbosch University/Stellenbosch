## Atmospheric

# A

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%HAAR.SHT31%' or measure ilike '%HAAR.DPS368.Press%')
ORDER BY time )
UNION
(
with temp as (
select time, value as "temp"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Temperature.2.4'
), hum as (
select time, value as "hum"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Humidity.2.4'
), press as (
select time, value as "press"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.DPS368.Pressure.2.4'
),
transposed_and_flagged as (
select press.time, join1.temp, join1.hum, press.press,
case
when (join1.temp < $HaarTempMin or
join1.temp > $HaarTempMax or
join1.temp is null or
join1.hum < $HaarRHMin or
join1.hum > $HaarRHMax or
join1.hum is null or
press.press < $HaarPresMin or
press.press > $HaarPresMax or
press.press is null) then 1
else 0
end as range_flag
from press
join (select temp.time, temp.temp, hum.hum from temp join hum on temp.time = hum.time) as join1
on join1.time = press.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
pressure_observations as (
  SELECT
    "time" AS pressure_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.4'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.4'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (pressure_observation IS NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN pressure_observations ON time = pressure_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31%' or measure ilike '%HAAR.DPS368.Press%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil A1

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.1'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.1'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_ST_MIN or
join1.st > $TDR315H_ST_MAX or
join1.st is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil A2

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.2%' or measure ilike '%Acclima Soil.Temperature.1.2%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.2'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.2'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_ST_MIN or
join1.st > $TDR315H_ST_MAX or
join1.st is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.2%' or measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## All data

# raw

(
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.4'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
ORDER BY 1

## range

SELECT
  "time" AS "time",
  case
    when (value < $HaarTempMin or value > $HaarTempMax) then 1
    else 0
  end as value,
  'Temperature Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarRHMin or value > $HaarRHMax) then 1
    else 0
  end as value,
  'Humidity Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarPresMin or value > $HaarPresMax) then 1
    else 0
  end as value,
  'Pressure Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.1 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# missing value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
bvwc_observations as (
  SELECT
    "time" AS bvwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
),
stemperature_observations as (
  SELECT
    "time" AS stemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
), 
bstemperature_observations as (
  SELECT
    "time" AS bstemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
), 
pressure_observations as (
  SELECT
    "time" AS pressure_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.4'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.4'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (bvwc_observation IS NULL) then 1
    WHEN (stemperature_observation is NULL) then 1
    WHEN (bstemperature_observation is NULL) then 1
    WHEN (pressure_observation IS NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation
  LEFT JOIN bvwc_observations ON time = bvwc_observation  
  LEFT JOIN stemperature_observations ON time = stemperature_observation
  LEFT JOIN bstemperature_observations ON time = bstemperature_observation
  LEFT JOIN pressure_observations ON time = pressure_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
ORDER BY 1

# std dev

(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Temperature.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Temperature Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Humidity.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Humidity Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.DPS368.Pressure.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.DPS368.Pressure Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time

## Location - transform labels to fields

SELECT
  time,
  node_id,
  display_name,
  metric,
  value
FROM
(SELECT
  ROW_NUMBER() OVER (PARTITION BY node_id, measure ORDER BY time DESC) r,
  time,
  value,
  measure as "metric",
  node_id,
  display_name
FROM $project_key.data
WHERE
  node_id = '$node'
  AND measure IN ('Longitude', 'Latitude')
) x
WHERE x.r <= 1
ORDER BY x.time ASC

## update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;

## battery

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  (elems1->'GONK'->'SoC')::float AS "SoC"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'GONK' 
  AND is_valid_json(message) 
  AND is_valid_time(message)

GROUP BY 1, 2
ORDER BY 1