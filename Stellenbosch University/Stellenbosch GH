## Temperature - join by field by time

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'HAAR.SHT31.Temperature.2.4' OR measure = 'HAAR.SHT31.Temperature.2.3' OR measure = 'HAAR.SHT31.Temperature.2.2')
ORDER BY time )
UNION
(
with temp1 as (
select time, value as "temp1"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Temperature.2.4'
), temp2 as (
select time, value as "temp2"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Temperature.2.3'
), temp3 as (
select time, value as "temp3"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Temperature.2.2'
),
transposed_and_flagged as (
select temp3.time, join1.temp1, join1.temp2, temp3.temp3,
case
when (join1.temp1 < $HaarTempMin or
join1.temp1 > $HaarTempMax or
join1.temp1 is null or
join1.temp2 < $HaarTempMin or
join1.temp2 > $HaarTempMax or
join1.temp2 is null or
temp3.temp3 < $HaarTempMin or
temp3.temp3 > $HaarTempMax or
temp3.temp3 is null) then 1
else 0
end as range_flag
from temp3
join (select temp1.time, temp1.temp1, temp2.temp2 from temp1 join temp2 on temp1.time = temp2.time) as join1
on join1.time = temp3.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
temperature1_observations as (
  SELECT
    "time" AS temperature1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.4'
    AND node_id = '$node'
), 
temperature2_observations as (
  SELECT
    "time" AS temperature2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.3'
    AND node_id = '$node'
), 
temperature3_observations as (
  SELECT
    "time" AS temperature3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (temperature1_observation is NULL) then 1
    WHEN (temperature2_observation is NULL) then 1
    WHEN (temperature3_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN temperature1_observations ON time = temperature1_observation 
  LEFT JOIN temperature2_observations ON time = temperature2_observation 
  LEFT JOIN temperature3_observations ON time = temperature3_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Temperature%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Humidity - join by field by time

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'HAAR.SHT31.Humidity.2.4' OR measure = 'HAAR.SHT31.Humidity.2.3' OR measure = 'HAAR.SHT31.Humidity.2.2')
ORDER BY time )
UNION
(
with hum1 as (
select time, value as "hum1"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Humidity.2.4'
), hum2 as (
select time, value as "hum2"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Humidity.2.3'
), hum3 as (
select time, value as "hum3"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Humidity.2.2'
),
transposed_and_flagged as (
select hum3.time, join1.hum1, join1.hum2, hum3.hum3,
case
when (join1.hum1 < $HaarRHMin or
join1.hum1 > $HaarRHMax or
join1.hum1 is null or
join1.hum2 < $HaarRHMin or
join1.hum2 > $HaarRHMax or
join1.hum2 is null or
hum3.hum3 < $HaarRHMin or
hum3.hum3 > $HaarRHMax or
hum3.hum3 is null) then 1
else 0
end as range_flag
from hum3
join (select hum1.time, hum1.hum1, hum2.hum2 from hum1 join hum2 on hum1.time = hum2.time) as join1
on join1.time = hum3.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
h1_observations as (
  SELECT
    "time" AS h1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.4'
    AND node_id = '$node'
), 
h2_observations as (
  SELECT
    "time" AS h2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.3'
    AND node_id = '$node'
), 
h3_observations as (
  SELECT
    "time" AS h3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (h1_observation is NULL) then 1
    WHEN (h2_observation is NULL) then 1
    WHEN (h3_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN h1_observations ON time = h1_observation 
  LEFT JOIN h2_observations ON time = h2_observation 
  LEFT JOIN h3_observations ON time = h3_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Humidity%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Barometric Pressure - join by field by time

# daily

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'HAAR.DPS368.Pressure.2.4' OR measure = 'HAAR.DPS368.Pressure.2.3' OR measure = 'HAAR.DPS368.Pressure.2.2')
ORDER BY time )
UNION
(
with pressure1 as (
select time, value as "pressure1"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.DPS368.Pressure.2.4'
), pressure2 as (
select time, value as "pressure2"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.DPS368.Pressure.2.3'
), pressure3 as (
select time, value as "pressure3"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.DPS368.Pressure.2.2'
),
transposed_and_flagged as (
select pressure3.time, join1.pressure1, join1.pressure2, pressure3.pressure3,
case
when (join1.pressure1 < $HaarPresMin or
join1.pressure1 > $HaarPresMax or
join1.pressure1 is null or
join1.pressure2 < $HaarPresMin or
join1.pressure2 > $HaarPresMax or
join1.pressure2 is null or
pressure3.pressure3 < $HaarPresMin or
pressure3.pressure3 > $HaarPresMax or
pressure3.pressure3 is null) then 1
else 0
end as range_flag
from pressure3
join (select pressure1.time, pressure1.pressure1, pressure2.pressure2 from pressure1 join pressure2 on pressure1.time = pressure2.time) as join1
on join1.time = pressure3.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
p1_observations as (
  SELECT
    "time" AS p1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.4'
    AND node_id = '$node'
), 
p2_observations as (
  SELECT
    "time" AS p2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.3'
    AND node_id = '$node'
), 
p3_observations as (
  SELECT
    "time" AS p3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (p1_observation is NULL) then 1
    WHEN (p2_observation is NULL) then 1
    WHEN (p3_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN p1_observations ON time = p1_observation 
  LEFT JOIN p2_observations ON time = p2_observation 
  LEFT JOIN p3_observations ON time = p3_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.DPS368.Pressure%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil East

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.1'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.1'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_ST_MIN or
join1.st > $TDR315H_ST_MAX or
join1.st is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil West

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.2%' or measure ilike '%Acclima Soil.Temperature.1.2%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.2'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.2'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_ST_MIN or
join1.st > $TDR315H_ST_MAX or
join1.st is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.2%' or measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## All data - join by field by time

# raw

(
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.4'
)
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
ORDER BY 1

# range

SELECT
  "time" AS "time",
  case
    when (value < $HaarTempMin or value > $HaarTempMax) then 1
    else 0
  end as value,
  'Temperature 2.4 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarTempMin or value > $HaarTempMax) then 1
    else 0
  end as value,
  'Temperature 2.3 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarTempMin or value > $HaarTempMax) then 1
    else 0
  end as value,
  'Temperature 2.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarRHMin or value > $HaarRHMax) then 1
    else 0
  end as value,
  'Humidity 2.4 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarRHMin or value > $HaarRHMax) then 1
    else 0
  end as value,
  'Humidity 2.3 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarRHMin or value > $HaarRHMax) then 1
    else 0
  end as value,
  'Humidity 2.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.2'


UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarPresMin or value > $HaarPresMax) then 1
    else 0
  end as value,
  'Pressure 2.4 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarPresMin or value > $HaarPresMax) then 1
    else 0
  end as value,
  'Pressure 2.3 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarPresMin or value > $HaarPresMax) then 1
    else 0
  end as value,
  'Pressure 2.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.1 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
ORDER BY 1

## daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## missign value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
bvwc_observations as (
  SELECT
    "time" AS bvwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
),
stemperature_observations as (
  SELECT
    "time" AS stemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
), 
bstemperature_observations as (
  SELECT
    "time" AS bstemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
), 
pressure1_observations as (
  SELECT
    "time" AS pressure1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.4'
    AND node_id = '$node'
),
humidity1_observations as (
  SELECT
    "time" AS humidity1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.4'
    AND node_id = '$node'
), 
temperature1_observations as (
  SELECT
    "time" AS temperature1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.4'
    AND node_id = '$node'
), 
pressure2_observations as (
  SELECT
    "time" AS pressure2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.3'
    AND node_id = '$node'
),
humidity2_observations as (
  SELECT
    "time" AS humidity2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.3'
    AND node_id = '$node'
), 
temperature2_observations as (
  SELECT
    "time" AS temperature2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.3'
    AND node_id = '$node'
), 
pressure3_observations as (
  SELECT
    "time" AS pressure3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.2'
    AND node_id = '$node'
),
humidity3_observations as (
  SELECT
    "time" AS humidity3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.2'
    AND node_id = '$node'
), 
temperature3_observations as (
  SELECT
    "time" AS temperature3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (bvwc_observation IS NULL) then 1
    WHEN (stemperature_observation is NULL) then 1
    WHEN (bstemperature_observation is NULL) then 1
    WHEN (pressure1_observation IS NULL) then 1
    WHEN (humidity1_observation IS NULL) then 1
    WHEN (temperature1_observation is NULL) then 1
    WHEN (pressure2_observation IS NULL) then 1
    WHEN (humidity2_observation IS NULL) then 1
    WHEN (temperature2_observation is NULL) then 1
    WHEN (pressure3_observation IS NULL) then 1
    WHEN (humidity3_observation IS NULL) then 1
    WHEN (temperature3_observation is NULL) then 1
  ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation
  LEFT JOIN bvwc_observations ON time = bvwc_observation  
  LEFT JOIN stemperature_observations ON time = stemperature_observation
  LEFT JOIN bstemperature_observations ON time = bstemperature_observation
  LEFT JOIN pressure1_observations ON time = pressure1_observation 
  LEFT JOIN humidity1_observations ON time = humidity1_observation 
  LEFT JOIN temperature1_observations ON time = temperature1_observation
  LEFT JOIN pressure2_observations ON time = pressure2_observation 
  LEFT JOIN humidity2_observations ON time = humidity2_observation 
  LEFT JOIN temperature2_observations ON time = temperature2_observation
  LEFT JOIN pressure3_observations ON time = pressure3_observation 
  LEFT JOIN humidity3_observations ON time = humidity3_observation 
  LEFT JOIN temperature3_observations ON time = temperature3_observation
ORDER BY 1

## std dev

(
WITH std_dev_timestamps as (
  SELECT
DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Temperature.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Temperature.2.4 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Humidity.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Humidity.2.4 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.DPS368.Pressure.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.DPS368.Pressure.2.4 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Temperature.2.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Temperature.2.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Humidity.2.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Humidity.2.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.DPS368.Pressure.2.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.DPS368.Pressure.2.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Temperature.2.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Temperature.2.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31.Humidity.2.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.SHT31.Humidity.2.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.DPS368.Pressure.2.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'HAAR.DPS368.Pressure.2.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time

## Location - labels to fields

SELECT
  time,
  node_id,
  display_name,
  metric,
  value
FROM
(SELECT
  ROW_NUMBER() OVER (PARTITION BY node_id, measure ORDER BY time DESC) r,
  time,
  value,
  measure as "metric",
  node_id,
  display_name
FROM $project_key.data
WHERE
  node_id = '$node'
  AND measure IN ('Longitude', 'Latitude')
) x
WHERE x.r <= 1
ORDER BY x.time ASC

## update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;

## SoC

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  max((elems1->'GONK'->'SoC')::float) AS "SoC",
  max((elems1->'GONK'->'CellVAvg')::float/1000) AS "Battery",
  max((elems2->'Kestrel'->'PORT_V'->3)::float) AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems2
WHERE
  $__timeFilter("publish_time") AND node_id = '$node' AND event = 'diagnostic/v2' 
  AND (elems1 ? 'GONK' OR elems2 ? 'Kestrel')
  AND is_valid_json(message) 
  AND is_valid_time(message)
GROUP BY 1
ORDER BY 1

## Battery - reduce min mean max

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  (elems1->'GONK'->'SoC')::float AS "SoC"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'GONK' 
  AND is_valid_json(message) 
  AND is_valid_time(message)

GROUP BY 1, 2
ORDER BY 1