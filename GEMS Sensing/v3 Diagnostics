# Raw

SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure NOT ilike 'latitude'
  AND measure NOT ilike 'longitude'
  AND measure NOT ilike 'altitude'
  Order by time

  # Diagnostics

  SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "Time",
  (elems1->'Kestrel'->'RH')::float AS "Inbox Humidity",
  (elems1->'Kestrel'->'Temperature'->>0)::float AS "Inbox Temp",
  (elems1->'Kestrel'->'PORT_V'->>0)::float as "battery",
  (elems1->'Kestrel'->'PORT_V'->>4)::float as "solar",
  (elems1->'Kestrel'->'AVG_P'->>0)::float AS "Batt over time",
  (elems1->'Kestrel'->'AVG_P'->>1)::float AS "System",
  (elems1->'Kestrel'->'AVG_P'->>2)::float AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'Kestrel' 
  AND is_valid_json(message) 
  AND is_valid_time(message)
  
  Order by "Time"

  # System Current


SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  (elems1->'Kestrel'->'PORT_I'->>3)::float AS "Solar",
  (elems1->'Kestrel'->'PORT_I'->>0)::float AS "Batt",
  (elems1->'Kestrel'->'PORT_I'->>1)::float AS "System",
  (elems1->'Kestrel'->'PORT_I'->>4)::float AS "Bulk",
  (elems1->'Kestrel'->'PORT_I'->>5)::float AS "3v3 Core",
  (elems1->'Kestrel'->'PORT_I'->>6)::float AS "3v3 Aux",
  (elems1->'Kestrel'->'PORT_I'->>7)::float AS "3v3 Talon"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'Kestrel' 
  AND is_valid_json(message) 
  AND is_valid_time(message)
  
  Order by time

  # SoC

  SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  max((elems1->'GONK'->'SoC')::float) AS "SoC",
  max((elems1->'GONK'->'CellVAvg')::float/1000) AS "Battery",
  max((elems2->'Kestrel'->'PORT_V'->3)::float) AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems2
WHERE
  $__timeFilter("publish_time") 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND (elems1 ? 'GONK' OR elems2 ? 'Kestrel')
  AND is_valid_json(message) 
  AND is_valid_time(message)
GROUP BY 1
ORDER BY 1

Map

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  max((elems1->'GONK'->'SoC')::float) AS "SoC",
  max((elems1->'GONK'->'CellVAvg')::float/1000) AS "Battery",
  max((elems2->'Kestrel'->'PORT_V'->3)::float) AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems2
WHERE
  $__timeFilter("publish_time") 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND (elems1 ? 'GONK' OR elems2 ? 'Kestrel')
  AND is_valid_json(message) 
  AND is_valid_time(message)
GROUP BY 1
ORDER BY 1

# Update Time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;
