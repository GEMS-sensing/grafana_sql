## Atmospheric

# Data

(
(((SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.TEMPERATURE'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.HUMIDITY'
-- UNION
-- SELECT
--   "time" AS "time",
--   value,
--   measure as "metric"
-- FROM $project_key.data
-- WHERE
--   $__timeFilter("time")
--   AND node_id = '$node'
--   AND measure = 'DPS368.0.PRESSURE'
  order by time)
UNION
(
with temp as (
select time, value as "temp"
from $project_key.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'SHT31.0.TEMPERATURE'
), hum as (
select time, value as "hum"
from $project_key.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'SHT31.0.HUMIDITY'
),
transposed_and_flagged as (
select hum.time, join1.temp, join1.hum,
case
when (join1.temp < $HaarTempMin or
join1.temp > $HaarTempMax or
join1.temp is null or
hum.hum < $HaarRHMin or
hum.hum > $HaarRHMax or
hum.hum is null) then 1
else 0
end as range_flag
from hum
join (select temp.time, temp.temp, hum.hum from temp join hum on temp.time = hum.time) as join1
on join1.time = hum.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
-- pressure_observations as (
--   SELECT
--     "time" AS pressure_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'DPS368.0.PRESSURE'
--     AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SHT31.0.HUMIDITY'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SHT31.0.TEMPERATURE'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    -- WHEN (pressure_observation IS NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  -- LEFT JOIN pressure_observations ON time = pressure_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SHT31%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil

# data

(
(((SELECT
  "time" AS "time",
  (((4.824*power(10,-10)) *power((1000*(value)),3))-(2.278*power(10,-6))*power((1000*(value)),2)+((3.898*power(10,-3))*(1000*(value)))-2.154)*100,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilMoisture.0'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'DS18.0'
  order by time)
UNION
(
with stemp as (
select time, value as "stemp"
from $project_key.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'DS18.0'
), svwc as (
select time, (((4.824*power(10,-10)) *power((1000*(value)),3))-(2.278*power(10,-6))*power((1000*(value)),2)+((3.898*power(10,-3))*(1000*(value)))-2.154)*100 as "svwc"
from $project_key.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'SoilMoisture.0'
),
transposed_and_flagged as (
select svwc.time, join1.stemp, join1.svwc,
case
when (join1.stemp < $ds18_min or
join1.stemp > $ds18_max or
join1.stemp is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select stemp.time, stemp.stemp, svwc.svwc from stemp join svwc on stemp.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilMoisture.0'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'DS18.0'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SoilMoisture.0%' or measure ilike '%DS18.0%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Wind Speed

# data

(
(
(SELECT
  "time",
  value*$windspd,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Wind.0.AVG_DURATION%')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'Wind.0.AVG_DURATION' and ((value*$windspd) < $E_VANE_II_MIN or (value*$windspd) > $E_VANE_II_MAX)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'Wind.0.AVG_DURATION')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
windspd_observations as (
  SELECT
    "time" AS windspd_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Wind.0.AVG_DURATION'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (windspd_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN windspd_observations ON time = windspd_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Wind.0.AVG_DURATION%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Average Wind speed (stat) - reduce mean

SELECT
  "time",
  value*$windspd,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
   AND (measure = 'Wind.0.AVG_DURATION')
ORDER BY time 

## Wind Direction

SELECT
    "time",
    value,
    measure
  FROM $project_key.data
  WHERE
    $__timeFilter(time)
    AND node_id = '$node'
    AND (measure ilike '%Wind Direction.0%')
  ORDER BY 1

  ## QAQC Wind Direction

  # data

  SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Wind Direction.0%')
ORDER BY time 

# value

SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'Wind Direction.0' and (value < $e_vane_II_dir_min or value > $e_vane_II_dir_max)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind Direction.0'
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# missing value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
winddirection_observations as (
  SELECT
    "time" AS winddirection_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Wind Direction.0'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (winddirection_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN winddirection_observations ON time = winddirection_observation 
ORDER BY 1

## Average Wind Direction (Within Current Time Range) (stat)

SELECT
    "time",
    value,
    measure
  FROM $project_key.data
  WHERE
    $__timeFilter(time)
    AND node_id = '$node'
    AND (measure = 'Wind Direction.0')
  ORDER BY 1

  ## Rainfall

  # data

  (
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Rain.0.COUNT%')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'Rain.0.COUNT' and ((value) < $Davis_AeroCone_6466M_MIN or (value) > $Davis_AeroCone_6466M_MAX)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'Rain.0.COUNT')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
rain_observations as (
  SELECT
    "time" AS rain_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Rain.0.COUNT'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (rain_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN rain_observations ON time = rain_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Rain.0.COUNT%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily 

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Total rain (stat) - reduce sum

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Rain.0.COUNT')
ORDER BY time 

## Pyranometer

# data

(
(
(SELECT
  "time",
  value*800,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%SolarRadiation.0%')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'SolarRadiation.0' and ((value*800) < $Apogee_SP_421_SS_MIN or (value*800) > $Apogee_SP_421_SS_MAX)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'SolarRadiation.0')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
windspd_observations as (
  SELECT
    "time" AS windspd_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SolarRadiation.0'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (windspd_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN windspd_observations ON time = windspd_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SolarRadiation.0%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## All data

# raw

(
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.TEMPERATURE'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.HUMIDITY'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'DS18.0'
UNION
SELECT
  "time" AS "time",
 (((4.824*power(10,-10)) *power((1000*(value)),3))-(2.278*power(10,-6))*power((1000*(value)),2)+((3.898*power(10,-3))*(1000*(value)))-2.154)*100,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilMoisture.0'
UNION
SELECT
  "time" AS "time",
  value*$windspd,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind.0.AVG_DURATION'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind Direction.0'
UNION
SELECT
  "time" AS "time",
  value *$rain,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Rain.0.COUNT'
UNION
SELECT
  "time" AS "time",
  value*800,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SolarRadiation.0'
ORDER BY 1

# range

SELECT
  "time" AS "time",
  case
    when (value < $HaarTempMin or value > $HaarTempMax) then 1
    else 0
  end as value,
  'Temperature Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.TEMPERATURE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.HUMIDITY'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $HaarRHMin or value > $HaarRHMax) then 1
    else 0
  end as value,
  'Humidity Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHT31.0.HUMIDITY'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'DS18.0'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Soil Temperature Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'DS18.0'
UNION
SELECT
  "time" AS "time",
  (((4.824*power(10,-10)) *power((1000*(value)),3))-(2.278*power(10,-6))*power((1000*(value)),2)+((3.898*power(10,-3))*(1000*(value)))-2.154)*100,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilMoisture.0'
UNION
SELECT
  "time" AS "time",
  case
    when ((((4.824*power(10,-10)) *power((1000*(value)),3))-(2.278*power(10,-6))*power((1000*(value)),2)+((3.898*power(10,-3))*(1000*(value)))-2.154)*100 < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Soil Moisture Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilMoisture.0'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind.0.AVG_DURATION'
UNION
SELECT
  "time" AS "time",
  case
    when ((value*$windspd) < $E_VANE_II_MIN or (value*$windspd) > $E_VANE_II_MAX) then 1
    else 0
  end as value,
  'Wind Speed Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind.0.AVG_DURATION'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind Direction.0'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $e_vane_II_dir_min or value > $e_vane_II_dir_max) then 1
    else 0
  end as value,
  'Wind Direction Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Wind Direction.0'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Rain.0.COUNT'
UNION
SELECT
  "time" AS "time",
  case
    when ((value) < $Davis_AeroCone_6466M_MIN or (value) > $Davis_AeroCone_6466M_MAX) then 1
    else 0
  end as value,
  'Rain Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Rain.0.COUNT'
UNION
SELECT
  "time" AS "time",
  value*800,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SolarRadiation.0'
UNION
SELECT
  "time" AS "time",
  case
    when ((value*800) < $Apogee_SP_421_SS_MIN or (value*800) > $Apogee_SP_421_SS_MAX) then 1
    else 0
  end as value,
  'SolarRadiation Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SolarRadiation.0'
ORDER BY 1

# missing value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilMoisture.0'
    AND node_id = '$node'
),
stemperature_observations as (
  SELECT
    "time" AS stemperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'DS18.0'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SHT31.0.HUMIDITY'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SHT31.0.TEMPERATURE'
    AND node_id = '$node'
), 
windspd_observations as (
  SELECT
    "time" AS windspd_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Wind.0.AVG_DURATION'
    AND node_id = '$node'
), 
winddirection_observations as (
  SELECT
    "time" AS winddirection_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Wind Direction.0'
    AND node_id = '$node'
), 
rain_observations as (
  SELECT
    "time" AS rain_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Rain.0.COUNT'
    AND node_id = '$node'
), 
apogeesolar_observations as (
  SELECT
    "time" AS apogeesolar_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SolarRadiation.0'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (stemperature_observation is NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    WHEN (windspd_observation is NULL) then 1
    WHEN (winddirection_observation is NULL) then 1
    WHEN (rain_observation is NULL) then 1
    WHEN (apogeesolar_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation 
  LEFT JOIN stemperature_observations ON time = stemperature_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
  LEFT JOIN windspd_observations ON time = windspd_observation
  LEFT JOIN winddirection_observations ON time = winddirection_observation
  LEFT JOIN rain_observations ON time = rain_observation
  LEFT JOIN apogeesolar_observations ON time = apogeesolar_observation
ORDER BY 1

# std dev 

(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SHT31.0.TEMPERATURE%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Temperature Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SHT31.0.HUMIDITY%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Humidity Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%DS18.0%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Soil Temperature Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SoilMoisture.0%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Soil Moisture Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Wind.0.AVG_DURATION%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Wind Speed Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Wind Direction.0%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Wind Direction Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Rain.0.COUNT%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Rain Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SolarRadiation.0%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'SolarRadiation.0 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;

## battery

SELECT
  "time",
  value,
  measure
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'PAC1720.0.VOLTAGE_2' OR measure = 'PAC1720.0.VOLTAGE' )
  ORDER BY 1


