## Atmospheric
 
# data

(
(((SELECT
  "time" AS "time",
  value*9/5+32,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'AirTemp_Avg(Deg C)'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'RH(%)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'BarometricPress_Avg(kPa)'
  order by time)
UNION
(
with temp as (
select time, value as "temp"
from $project_key1."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'AirTemp_Avg(Deg C)'
), hum as (
select time, value as "hum"
from $project_key1."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'RH(%)'
), press as (
select time, value as "press"
from $project_key1."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'BarometricPress_Avg(kPa)'
),
transposed_and_flagged as (
select press.time, join1.temp, join1.hum, press.press,
case
when (join1.temp < $airHygro_VUE_10_MIN or
join1.temp > $airHygro_VUE_10_MAX or
join1.temp is null or
join1.hum < $rhHygro_VUE_10_MIN or
join1.hum > $rhHygro_VUE_10_MAX or
join1.hum is null or
press.press < $pressCS100_MIN or
press.press > $pressCS100_MAX or
press.press is null) then 1
else 0
end as range_flag
from press
join (select temp.time, temp.temp, hum.hum from temp join hum on temp.time = hum.time) as join1
on join1.time = press.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
pressure_observations as (
  SELECT
    "time" AS pressure_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'BarometricPress_Avg(kPa)'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'RH(%)'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'AirTemp_Avg(Deg C)'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (pressure_observation IS NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN pressure_observations ON time = pressure_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%AirTemp_Avg(Deg C)%' or measure ilike '%BarometricPress_Avg(kPa)%' or measure ilike '%RH(%)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil

# data

(
((SELECT
  "time" AS "time",
  value*100,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilVWC_Avg(m^3/m^3)'
  )
UNION
SELECT
  "time" AS "time",
  value*9/5+32,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilTemp_Avg(Deg C)'
UNION
(
with st as (
select time, value as "st"
from $project_key1.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'SoilTemp_Avg(Deg C)'
), svwc as (
select time, (value*100) as "svwc"
from $project_key1.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'SoilVWC_Avg(m^3/m^3)'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $CS655_soiltemp_MIN or
join1.st > $CS655_soiltemp_MAX or
join1.st is null or
svwc.svwc < $CS655_soilvwc_MIN or
svwc.svwc > $CS655_soilvwc_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilVWC_Avg(m^3/m^3)'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilTemp_Avg(Deg C)'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SoilVWC_Avg(m^3/m^3)%' or measure ilike '%SoilTemp_Avg(Deg C)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## EC Bulk

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key1.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'SoilEC_Avg(dS/m)')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'SoilEC_Avg(dS/m)' and (value < $CS655_BulkEC_min or value > $CS655_BulkEC_max)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'SoilEC_Avg(dS/m)')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
bec1_observations as (
  SELECT
    "time" AS bec1_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilEC_Avg(dS/m)'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (bec1_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN bec1_observations ON time = bec1_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'SoilEC_Avg(dS/m)')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Wind Speed

# data

(
(
(SELECT
  "time",
  value*2.23694,
  measure AS "metric"
FROM $project_key1.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'WindSpeed_Avg(meters/second)')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'WindSpeed_Avg(meters/second)' and ((value) < $05103_windspd_MIN or (value) > $05103_windspd_MAX)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'WindSpeed_Avg(meters/second)')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
windspd_observations as (
  SELECT
    "time" AS windspd_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'WindSpeed_Avg(meters/second)'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (windspd_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN windspd_observations ON time = windspd_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%WindSpeed_Avg(meters/second)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Average wind speed (stat)

SELECT
  "time",
  value*2.23694,
  measure AS "metric"
FROM $project_key1.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
   AND (measure = 'WindSpeed_Avg(meters/second)')
ORDER BY time 

## wind direction

SELECT
    "time",
    value,
    measure
  FROM $project_key1.data
  WHERE
    $__timeFilter(time)
    AND node_id = '$node'
    AND (measure = 'WindDir(degrees)')
  ORDER BY 1

  ## QAQC Wind direction

  # data

  SELECT
    "time",
    value,
    measure
  FROM $project_key1.data
  WHERE
    $__timeFilter(time)
    AND node_id = '$node'
    AND (measure = 'WindDir(degrees)')
  ORDER BY 1

  # daily

  SELECT
  "time" AS "time",
  case
    when (value IS NULL) then 1
    when (measure = 'WindDir(degrees)' and (value < $05103_winddir_MIN or value > $05103_winddir_MAX)) then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindDir(degrees)'
ORDER BY 1

## Average Wind Direction (Within Current Time Range)

SELECT
    "time",
    value,
    measure
  FROM $project_key1.data
  WHERE
    $__timeFilter(time)
    AND node_id = '$node'
    AND (measure = 'WindDir(degrees)')
  ORDER BY 1

  ## Rainfall

  (
(
(SELECT
  "time",
  value/25.4,
  measure AS "metric"a
FROM $project_key1.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Precip_Tot(mm)%')
ORDER BY time )
UNION
SELECT
  "time" AS "time",
  case
    when (value IS NULL) Then 1
    when (measure = 'Precip_Tot(mm)' and (value < $TE525WSL_rain_MIN or value > $TE525WSL_rain_MAX)) Then 1
    else 0
  end as value,
  'Value Out Of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'Precip_Tot(mm)')
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
rain_observations as (
  SELECT
    "time" AS rain_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Precip_Tot(mm)'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (rain_observation IS NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN rain_observations ON time = rain_observation  
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Precip_Tot(mm)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

## Total Rain (Within Current Time Range) (stat)

SELECT
  "time",
  value/25.4,
  measure AS "metric"
FROM $project_key1.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Precip_Tot(mm)')
ORDER BY time 

## Pyranometer

# data

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## All data

# raw

(
SELECT
  "time" AS "time",
  value*9/5+32,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'AirTemp_Avg(Deg C)'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'RH(%)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'BarometricPress_Avg(kPa)'
UNION
SELECT
  "time" AS "time",
  value*9/5+32,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilTemp_Avg(Deg C)'
UNION
SELECT
  "time" AS "time",
  value*100,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilVWC_Avg(m^3/m^3)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilEC_Avg(dS/m)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilPermittivity_Avg(unitless)'
-- UNION
-- SELECT
--   "time" AS "time",
--   value,
--   measure as "metric"
-- FROM $project_key.data
-- WHERE
--   $__timeFilter("time")
--   AND node_id = '$node'
--   AND measure = 'Acclima Soil.Temperature.1.2'
-- UNION
-- SELECT
--   "time" AS "time",
--   value,
--   measure as "metric"
-- FROM $project_key.data
-- WHERE
--   $__timeFilter("time")
--   AND node_id = '$node'
--   AND measure = 'Acclima Soil.VWC.1.2'
-- UNION
-- SELECT
--   "time" AS "time",
--   value,
--   measure as "metric"
-- FROM $project_key.data
-- WHERE
--   $__timeFilter("time")
--   AND node_id = '$node'
--   AND measure = 'Acclima Soil.EC_BULK.1.2'
-- UNION
-- SELECT
--   "time" AS "time",
--   value,
--   measure as "metric"
-- FROM $project_key.data
-- WHERE
--   $__timeFilter("time")
--   AND node_id = '$node'
--   AND measure = 'Acclima Soil.EC_PORE.1.2'
-- UNION
-- SELECT
--   "time" AS "time",
--   value,
--   measure as "metric"
-- FROM $project_key.data
-- WHERE
--   $__timeFilter("time")
--   AND node_id = '$node'
--   AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  value*2.23694,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindSpeed_Avg(meters/second)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindDir(degrees)'
UNION
SELECT
  "time" AS "time",
  value/25.4,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Precip_Tot(mm)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SlrFluxDensity_Avg(W/m^2)'
ORDER BY 1

# Range

SELECT
  "time" AS "time",
  case
    when (value < $airHygro_VUE_10_MIN or value > $airHygro_VUE_10_MAX) then 1
    else 0
  end as value,
  'Temperature Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'AirTemp_Avg(Deg C)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'RH(%)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $rhHygro_VUE_10_MIN or value > $rhHygro_VUE_10_MAX) then 1
    else 0
  end as value,
  'Humidity Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'RH(%)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'BarometricPress_Avg(kPa)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $pressCS100_MIN or value > $pressCS100_MAX) then 1
    else 0
  end as value,
  'Pressure Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'BarometricPress_Avg(kPa)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilTemp_Avg(Deg C)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $CS655_soiltemp_MIN or value > $CS655_soiltemp_MAX) then 1
    else 0
  end as value,
  'SoilTemp_Avg(Deg C) Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilTemp_Avg(Deg C)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilVWC_Avg(m^3/m^3)'
UNION
SELECT
  "time" AS "time",
  case
    when ((value*100) < $CS655_soilvwc_MIN or (value*100) > $CS655_soilvwc_MAX) then 1
    else 0
  end as value,
  'SoilVWC_Avg(m^3/m^3) Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilVWC_Avg(m^3/m^3)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilEC_Avg(dS/m)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $CS655_BulkEC_min or value > $CS655_BulkEC_max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.1 Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilEC_Avg(dS/m)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilPermittivity_Avg(unitless)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $CS655_Perm_min or value > $CS655_Perm_max) then 1
    else 0
  end as value,
  'SoilPermittivity_Avg(unitless) Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SoilPermittivity_Avg(unitless)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindSpeed_Avg(meters/second)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $05103_windspd_MIN or value > $05103_windspd_MAX) then 1
    else 0
  end as value,
  'Wind Speed Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindSpeed_Avg(meters/second)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindDir(degrees)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $05103_winddir_MIN or value > $05103_winddir_MAX) then 1
    else 0
  end as value,
  'Wind Direction Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'WindDir(degrees)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Precip_Tot(mm)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TE525WSL_rain_MIN or value > $TE525WSL_rain_MAX) then 1
    else 0
  end as value,
  'Rain Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Precip_Tot(mm)'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SlrFluxDensity_Avg(W/m^2)'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $Apogee_CS320_MIN or value > $Apogee_CS320_MAX) then 1
    else 0
  end as value,
  'SlrFluxDensity_Avg(W/m^2) Value Out of Range Flag' as metric
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SlrFluxDensity_Avg(W/m^2)'
ORDER BY 1

# missing

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilVWC_Avg(m^3/m^3)'
    AND node_id = '$node'
),
stemperature_observations as (
  SELECT
    "time" AS stemperature_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilTemp_Avg(Deg C)'
    AND node_id = '$node'
), 
ecb_observations as (
  SELECT
    "time" AS ecb_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilEC_Avg(dS/m)'
    AND node_id = '$node'
), 
perm_observations as (
  SELECT
    "time" AS perm_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SoilPermittivity_Avg(unitless)'
    AND node_id = '$node'
),  
pressure_observations as (
  SELECT
    "time" AS pressure_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'BarometricPress_Avg(kPa)'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'RH(%)'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'AirTemp_Avg(Deg C)'
    AND node_id = '$node'
), 
windspd_observations as (
  SELECT
    "time" AS windspd_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'WindSpeed_Avg(meters/second)'
    AND node_id = '$node'
), 
winddirection_observations as (
  SELECT
    "time" AS winddirection_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'WindDir(degrees)'
    AND node_id = '$node'
), 
rain_observations as (
  SELECT
    "time" AS rain_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Precip_Tot(mm)'
    AND node_id = '$node'
), 
apogeesolar_observations as (
  SELECT
    "time" AS apogeesolar_observation
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'SlrFluxDensity_Avg(W/m^2)'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (stemperature_observation is NULL) then 1
    WHEN (ecb_observation is NULL) then 1
    WHEN (perm_observation is NULL) then 1
    WHEN (pressure_observation IS NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    WHEN (windspd_observation is NULL) then 1
    WHEN (winddirection_observation is NULL) then 1
    WHEN (rain_observation is NULL) then 1
    WHEN (apogeesolar_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation 
  LEFT JOIN stemperature_observations ON time = stemperature_observation
  LEFT JOIN ecb_observations ON time = ecb_observation
  LEFT JOIN perm_observations ON time = perm_observation
  LEFT JOIN pressure_observations ON time = pressure_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
  LEFT JOIN windspd_observations ON time = windspd_observation
  LEFT JOIN winddirection_observations ON time = winddirection_observation
  LEFT JOIN rain_observations ON time = rain_observation
  LEFT JOIN apogeesolar_observations ON time = apogeesolar_observation
ORDER BY 1

# std dev

(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%AirTemp_Avg(Deg C)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'AirTemp_Avg(Deg C) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'RH(%)')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'RH(%) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%BarometricPress_Avg(kPa)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'BarometricPress_Avg(kPa) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'SoilTemp_Avg(Deg C)')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'SoilTemp_Avg(Deg C) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'SoilVWC_Avg(m^3/m^3)')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'SoilVWC_Avg(m^3/m^3) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'SoilEC_Avg(dS/m)')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'SoilEC_Avg(dS/m) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'SoilPermittivity_Avg(unitless)')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'SoilPermittivity_Avg(unitless) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%WindSpeed_Avg(meters/second)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Wind Speed Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%WindDir(degrees)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Wind Direction Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Precip_Tot(mm)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Rain Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key1.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%SlrFluxDensity_Avg(W/m^2)%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key1.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'SlrFluxDensity_Avg(W/m^2) Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key1.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# Location

SELECT
  time,
  node_id,
  display_name,
  metric,
  value
FROM
(SELECT
  ROW_NUMBER() OVER (PARTITION BY node_id, measure ORDER BY time DESC) r,
  time,
  value,
  measure as "metric",
  node_id,
  display_name
FROM $project_key1.data
WHERE
  node_id = '$node'
  AND measure IN ('Longitude', 'Latitude')
) x
WHERE x.r <= 1
ORDER BY x.time ASC

## Battery

SELECT
  "time",
  value,
  measure
FROM $project_key1.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure ilike 'BattV_Avg(Volts)')
  ORDER BY 1

## Update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key1.data
WHERE node_id = '$node'
  AND time <= now()
ORDER BY 1