## Soil Temperature

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Acclima Soil.Temperature.1.1' OR measure = 'Acclima Soil.Temperature.1.2' OR measure = 'Acclima Soil.Temperature.1.3')
ORDER BY time
)
UNION
(
with temp1 as (
select time, value as "temp1"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.1'
), temp2 as (
select time, value as "temp2"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.2'
), temp3 as (
select time, value as "temp3"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.3'
),
transposed_and_flagged as (
select temp3.time, join1.temp1, join1.temp2, temp3.temp3,
case
when (join1.temp1 < $TDR315H_ST_MIN or
join1.temp1 > $TDR315H_ST_MAX or
join1.temp1 is null or
join1.temp2 < $TDR315H_ST_MIN or
join1.temp2 > $TDR315H_ST_MAX or
join1.temp2 is null or
temp3.temp3 < $TDR315H_ST_MIN or
temp3.temp3 > $TDR315H_ST_MAX or
temp3.temp3 is null) then 1
else 0
end as range_flag
from temp3
join (select temp1.time, temp1.temp1, temp2.temp2 from temp1 join temp2 on temp1.time = temp2.time) as join1
on join1.time = temp3.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
temperature1_observations as (
  SELECT
    "time" AS temperature1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
), 
temperature2_observations as (
  SELECT
    "time" AS temperature2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
), 
temperature3_observations as (
  SELECT
    "time" AS temperature3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.3'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (temperature1_observation is NULL) then 1
    WHEN (temperature2_observation is NULL) then 1
    WHEN (temperature3_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN temperature1_observations ON time = temperature1_observation 
  LEFT JOIN temperature2_observations ON time = temperature2_observation 
  LEFT JOIN temperature3_observations ON time = temperature3_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Soil VWC

# data

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Acclima Soil.VWC.1.1' OR measure = 'Acclima Soil.VWC.1.2' OR measure = 'Acclima Soil.VWC.1.3')
ORDER BY time )
UNION
(
with vwc1 as (
select time, value as "vwc1"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.1'
), vwc2 as (
select time, value as "vwc2"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.2'
), vwc3 as (
select time, value as "vwc3"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.3'
),
transposed_and_flagged as (
select vwc3.time, join1.vwc1, join1.vwc2, vwc3.vwc3,
case
when (join1.vwc1 < $TDR315H_VWC_MIN or
join1.vwc1 > $TDR315H_VWC_MAX or
join1.vwc1 is null or
join1.vwc2 < $TDR315H_VWC_MIN or
join1.vwc2 > $TDR315H_VWC_MAX or
join1.vwc2 is null or
vwc3.vwc3 < $TDR315H_VWC_MIN or
vwc3.vwc3 > $TDR315H_VWC_MAX or
vwc3.vwc3 is null) then 1
else 0
end as range_flag
from vwc3
join (select vwc1.time, vwc1.vwc1, vwc2.vwc2 from vwc1 join vwc2 on vwc1.time = vwc2.time) as join1
on join1.time = vwc3.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
VWC1_observations as (
  SELECT
    "time" AS VWC1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
), 
VWC2_observations as (
  SELECT
    "time" AS VWC2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
), 
VWC3_observations as (
  SELECT
    "time" AS VWC3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.3'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (VWC1_observation is NULL) then 1
    WHEN (VWC2_observation is NULL) then 1
    WHEN (VWC3_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN VWC1_observations ON time = VWC1_observation 
  LEFT JOIN VWC2_observations ON time = VWC2_observation 
  LEFT JOIN VWC3_observations ON time = VWC3_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Gas

# daily

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Apogee O2.Oxygen_%.1.4' OR measure = 'Hedorah.CO2.2.4')
ORDER BY time )
UNION
(
with oxygen as (
select time, value as "oxygen"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Apogee O2.Oxygen_%.1.4'
), carbon as (
select time, value as "carbon"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Hedorah.CO2.2.4'
),
transposed_and_flagged as (
select carbon.time, join1.oxygen, join1.carbon,
case
when (join1.oxygen < $Apogee_SO421_min or
join1.oxygen > $Apogee_SO421_max or
join1.oxygen is null or
carbon.carbon < $hedorah_CO2_min or
carbon.carbon > $hedorah_CO2_max or
carbon.carbon is null) then 1
else 0
end as range_flag
from carbon
join (select oxygen.time, oxygen.oxygen, carbon.carbon from oxygen join carbon on oxygen.time = carbon.time) as join1
on join1.time = carbon.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Oxygen_%.1.4'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah.CO2.2.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN ox_observations ON time = ox_observation 
  LEFT JOIN hed_observations ON time = hed_observation 
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'Apogee O2.Oxygen_%.1.4' OR measure = 'Hedorah.CO2.2.4')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Gas - Auxiliary

# A

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Apogee O2.Temperature.1.4' OR measure = 'Hedorah.Temperature.2.4' OR measure = 'Hedorah.Humidity.2.4')
ORDER BY time

## All data

# raw

(
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Temperature.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_mV.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.CO2.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.Temperature.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.Humidity.2.4'
  UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Blue.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Clear.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Green.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.IR.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Red.15'
ORDER BY 1

# range

SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.1 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_ST_MIN or value > $TDR315H_ST_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.Temperature.1.3 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.1 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR315H_VWC_MIN or value > $TDR315H_VWC_MAX) then 1
    else 0
  end as value,
  'Acclima Soil.VWC.1.3 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_BEC_Min or value > $TDR_BEC_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_BULK.1.3 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.1 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.2 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.3'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Pore_Min or value > $TDR_Pore_Max) then 1
    else 0
  end as value,
  'Acclima Soil.EC_PORE.1.3 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.1 Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $TDR_Perm_Min or value > $TDR_Perm_Max) then 1
    else 0
  end as value,
  'Acclima Soil.Permitivity.1.2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.3'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $Apogee_SO421_min or value > $Apogee_SO421_max) then 1
    else 0
  end as value,
  'Apogee O2.Oxygen_%.1.4 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.CO2.2.4'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $hedorah_CO2_min or value > $hedorah_CO2_max) then 1
    else 0
  end as value,
  'Hedorah.CO2.2.4 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.CO2.2.4'
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# missing value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
t1_observations as (
  SELECT
    "time" AS t1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
),
t2_observations as (
  SELECT
    "time" AS t2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.2'
    AND node_id = '$node'
),
t3_observations as (
  SELECT
    "time" AS t3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.3'
    AND node_id = '$node'
), 
v1_observations as (
  SELECT
    "time" AS v1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
), 
v2_observations as (
  SELECT
    "time" AS v2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.2'
    AND node_id = '$node'
),
v3_observations as (
  SELECT
    "time" AS v3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.3'
    AND node_id = '$node'
), 
ec1_observations as (
  SELECT
    "time" AS ec1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.1'
    AND node_id = '$node'
), 
ec2_observations as (
  SELECT
    "time" AS ec2_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.2'
    AND node_id = '$node'
), 
ec3_observations as (
  SELECT
    "time" AS ec3_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.3'
    AND node_id = '$node'
-- ), 
-- ep1_observations as (
--   SELECT
--     "time" AS ep1_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'Acclima Soil.EC_PORE.1.1'
--     AND node_id = '$node'
-- ), 
-- ep2_observations as (
--   SELECT
--     "time" AS ep2_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'Acclima Soil.EC_PORE.1.2'
--     AND node_id = '$node'
-- ), 
-- ep3_observations as (
--   SELECT
--     "time" AS ep3_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'Acclima Soil.EC_PORE.1.3'
--     AND node_id = '$node'
-- ), 
-- perm1_observations as (
--   SELECT
--     "time" AS perm1_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'Acclima Soil.Permitivity.1.1'
--     AND node_id = '$node'
-- ), 
-- perm2_observations as (
--   SELECT
--     "time" AS perm2_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'Acclima Soil.Permitivity.1.2'
--     AND node_id = '$node'
-- ), 
-- perm3_observations as (
--   SELECT
--     "time" AS perm3_observation
--   FROM $project_key.data
--   WHERE
--     $__timeFilter("time")
--     AND data.measure = 'Acclima Soil.Permitivity.1.3'
--     AND node_id = '$node'
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Oxygen_%.1.4'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah.CO2.2.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (t1_observation IS NULL) then 1
    WHEN (t2_observation IS NULL) then 1
    WHEN (t3_observation is NULL) then 1
    WHEN (v1_observation is NULL) then 1
    WHEN (v2_observation IS NULL) then 1
    WHEN (v3_observation IS NULL) then 1
    WHEN (ec1_observation is NULL) then 1
    WHEN (ec2_observation is NULL) then 1
    WHEN (ec3_observation is NULL) then 1
    -- WHEN (ep1_observation is NULL) then 1
    -- WHEN (ep2_observation is NULL) then 1
    -- WHEN (ep3_observation is NULL) then 1
    -- WHEN (perm1_observation is NULL) then 1
    -- WHEN (perm2_observation is NULL) then 1
    -- WHEN (perm3_observation is NULL) then 1
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN t1_observations ON time = t1_observation
  LEFT JOIN t2_observations ON time = t2_observation  
  LEFT JOIN t3_observations ON time = t3_observation
  LEFT JOIN v1_observations ON time = v1_observation
  LEFT JOIN v2_observations ON time = v2_observation 
  LEFT JOIN v3_observations ON time = v3_observation 
  LEFT JOIN ec1_observations ON time = ec1_observation
  LEFT JOIN ec2_observations ON time = ec2_observation
  LEFT JOIN ec3_observations ON time = ec3_observation
  -- LEFT JOIN ep1_observations ON time = ep1_observation
  -- LEFT JOIN ep2_observations ON time = ep2_observation
  -- LEFT JOIN ep3_observations ON time = ep3_observation
  -- LEFT JOIN perm1_observations ON time = perm1_observation
  -- LEFT JOIN perm2_observations ON time = perm2_observation
  -- LEFT JOIN perm3_observations ON time = perm3_observation
  LEFT JOIN ox_observations ON time = ox_observation
  LEFT JOIN hed_observations ON time = hed_observation
ORDER BY 1

# std dev

(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Temperature.1.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Temperature.1.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.VWC.1.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_BULK.1.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_BULK.1.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.EC_PORE.1.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.EC_PORE.1.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.1 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.Permitivity.1.3%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Acclima Soil.Permitivity.1.3 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Apogee O2.Oxygen_%.1.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Apogee O2.Oxygen_%.1.4 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Hedorah.CO2.2.4%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Hedorah.CO2.2.4 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time

## Location - transform labels to fields

SELECT
  time,
  node_id,
  display_name,
  metric,
  value
FROM
(SELECT
  ROW_NUMBER() OVER (PARTITION BY node_id, measure ORDER BY time DESC) r,
  time,
  value,
  measure as "metric",
  node_id,
  display_name
FROM $project_key.data
WHERE
  node_id = '$node'
  AND measure IN ('Longitude', 'Latitude')
) x
WHERE x.r <= 1
ORDER BY x.time ASC

## SoC

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  max((elems1->'GONK'->>'SoC')::float) AS "SoC",
 max((elems1->'GONK'->'CellVAvg')::float/1000) AS "Battery",
  max((elems2->'Kestrel'->'PORT_V'->>3)::float) AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems2
WHERE
  $__timeFilter("publish_time") AND node_id = '$node' AND event = 'diagnostic/v2' 
  AND (elems1 ? 'GONK' OR elems2 ? 'Kestrel')
  -- AND (elems1 ? 'GONK')
  AND is_valid_json(message) 
  AND is_valid_time(message)
GROUP BY 1
ORDER BY 1

## Update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;

## Battery - reduce min max mean (bar gauge)

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  (elems1->'GONK'->'SoC')::float AS "SoC"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'GONK' 
  AND is_valid_json(message) 
  AND is_valid_time(message)

GROUP BY 1, 2
ORDER BY 1