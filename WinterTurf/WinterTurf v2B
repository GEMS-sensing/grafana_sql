## Gas 1

# data

(
((SELECT
  "time",
  value*$O2_m2_conversion,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'ApogeeO2.0.OXYGEN')
ORDER BY time 
)
UNION
(
SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Hedorah-NDIR.0.CO2')
Order by time
)
UNION
(
with oxygen as (
select time, value*$O2_m2_conversion as "oxygen"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'ApogeeO2.0.OXYGEN'
), carbon as (
select time, value as "carbon"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Hedorah-NDIR.0.CO2'
),
transposed_and_flagged as (
select carbon.time, join1.oxygen, join1.carbon,
case
when (join1.oxygen < $Apogee_SO421_min or
join1.oxygen > $Apogee_SO421_max or
join1.oxygen is null or
carbon.carbon < $hedorah_CO2_min or
carbon.carbon > $hedorah_CO2_max or
carbon.carbon is null) then 1
else 0
end as range_flag
from carbon
join (select oxygen.time, oxygen.oxygen, carbon.carbon from oxygen join carbon on oxygen.time = carbon.time) as join1
on join1.time = carbon.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'ApogeeO2.0.OXYGEN'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah-NDIR.0.CO2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN ox_observations ON time = ox_observation 
  LEFT JOIN hed_observations ON time = hed_observation 
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'ApogeeO2.0.OXYGEN' OR measure = 'Hedorah-NDIR.0.CO2')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Gas 2

# data

(
((SELECT
  "time",
  value*$O2_m2_conversion,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'ApogeeO2.1.OXYGEN')
ORDER BY time 
)
UNION
(
SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Hedorah-NDIR.1.CO2')
Order by time
)
UNION
(
with oxygen as (
select time, value*$O2_m2_conversion as "oxygen"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'ApogeeO2.1.OXYGEN'
), carbon as (
select time, value as "carbon"
from winterturf."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Hedorah-NDIR.1.CO2'
),
transposed_and_flagged as (
select carbon.time, join1.oxygen, join1.carbon,
case
when (join1.oxygen < $Apogee_SO421_min or
join1.oxygen > $Apogee_SO421_max or
join1.oxygen is null or
carbon.carbon < $hedorah_CO2_min or
carbon.carbon > $hedorah_CO2_max or
carbon.carbon is null) then 1
else 0
end as range_flag
from carbon
join (select oxygen.time, oxygen.oxygen, carbon.carbon from oxygen join carbon on oxygen.time = carbon.time) as join1
on join1.time = carbon.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'ApogeeO2.1.OXYGEN'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah-NDIR.1.CO2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN ox_observations ON time = ox_observation 
  LEFT JOIN hed_observations ON time = hed_observation 
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'ApogeeO2.1.OXYGEN' OR measure = 'Hedorah-NDIR.1.CO2')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

## Gas - Auxiliary

# data

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Hedorah-NDIR.0.TEMPERATURE' OR measure = 'Hedorah-NDIR.1.HUMIDITY' OR measure = 'Hedorah-NDIR.1.TEMPERATURE' OR measure = 'Hedorah-NDIR.0.HUMIDITY')
ORDER BY time

## All data

# raw

(
SELECT
  "time" AS "time",
  value*$O2_m2_conversion,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.0.OXYGEN'
  )
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.0.REF'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.0.TEMPERATURE'
UNION
SELECT
  "time" AS "time",
  value*$O2_m2_conversion,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.1.OXYGEN'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.1.REF'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.1.TEMPERATURE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.0.CO2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.0.HUMIDITY'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.0.TEMPERATURE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.1.CO2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.1.HUMIDITY'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.1.TEMPERATURE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'PAC1720.0.CURRENT'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'PAC1720.0.CURRENT_2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'PAC1720.0.VOLTAGE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHTC3.0.HUMIDITY'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'PAC1720.0.VOLTAGE_2'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'SHTC3.0.TEMPERATURE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'TCS3400.0.LIGHT_BLUE'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'TCS3400.0.LIGHT_GREEN'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'TCS3400.0.LIGHT_RED'
ORDER BY 1

# range

SELECT
  "time" AS "time",
  case
    when ((value*$O2_m2_conversion) < $Apogee_SO421_min or (value*$O2_m2_conversion) > $Apogee_SO421_max) then 1
    else 0
  end as value,
  'ApogeeO2.0.OXYGEN Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.0.OXYGEN'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.0.CO2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $hedorah_CO2_min or value > $hedorah_CO2_max) then 1
    else 0
  end as value,
  'Hedorah-NDIR.0.CO2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.0.CO2'
UNION
SELECT
  "time" AS "time",
  value*$O2_m2_conversion,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.1.OXYGEN'
UNION
SELECT
  "time" AS "time",
  case
    when ((value*$O2_m2_conversion) < $Apogee_SO421_min or (value*$O2_m2_conversion) > $Apogee_SO421_max) then 1
    else 0
  end as value,
  'ApogeeO2.1.OXYGEN Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'ApogeeO2.1.OXYGEN'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.1.CO2'
UNION
SELECT
  "time" AS "time",
  case
    when (value < $hedorah_CO2_min or value > $hedorah_CO2_max) then 1
    else 0
  end as value,
  'Hedorah-NDIR.1.CO2 Value Out of Range Flag' as metric
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah-NDIR.1.CO2'
ORDER BY 1

# daily

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# missing value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'ApogeeO2.0.OXYGEN'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah-NDIR.0.CO2'
    AND node_id = '$node'
), 
ox1_observations as (
  SELECT
    "time" AS ox1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'ApogeeO2.1.OXYGEN'
    AND node_id = '$node'
), 
hed1_observations as (
  SELECT
    "time" AS hed1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah-NDIR.1.CO2'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    WHEN (ox1_observation is NULL) then 1
    WHEN (hed1_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps  
  LEFT JOIN ox_observations ON time = ox_observation
  LEFT JOIN hed_observations ON time = hed_observation
  LEFT JOIN ox1_observations ON time = ox1_observation
  LEFT JOIN hed1_observations ON time = hed1_observation
ORDER BY 1

# std Deviation

(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%ApogeeO2.0.OXYGEN%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'ApogeeO2.0.OXYGEN Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Hedorah-NDIR.0.CO2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Hedorah-NDIR.0.CO2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%ApogeeO2.1.OXYGEN%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'ApogeeO2.1.OXYGEN Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Hedorah-NDIR.1.CO2%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
Order by 1
)
SELECT
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Hedorah-NDIR.1.CO2 Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
Order by 1
)
Order by time

## SoC

SELECT
  "time",
  value,
  measure
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND (measure = 'PAC1720.0.VOLTAGE_2' OR measure = 'PAC1720.0.VOLTAGE' )
  ORDER BY 1

# Update time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;
