# QAQC ERror flagging dashboard (txt)

The error flagging dashboard incorporates automatic Quality Assurance and Quality Control (QAQC) features. Panels are configured to autonomously flag issues based on predefined rules. There are four established flagging rules:

- **Missing Value Flag:** Activated when a sensor returns a null value.
- **Standard Deviation Warning Flag:** Located at the top of the page, two text boxes, `Standard Deviation`, and `Time Window in minutes` allow users to set values for inspecting standard deviation from the mean.
- **Value out of Range Flag:** Activated if a sensor provides a value outside the specified range outlined in its specifications.
- **Daily Operations Flag:** Activated when the logger has been inactive for more than one day due to a power or hardware issue and then reconnects. This service disruption is flagged for attention.

To enable or disable flags, click on the parameter name beneath each graph. For viewing multiple parameters, hold the `ctrl` key while clicking on the parameter names. The all-data table includes raw data, along with columns indicating flagged values (0 for absent, 1 for present).

# battery

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  (elems1->'GONK'->'SoC')::float AS "SoC"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1
WHERE
  $__timeFilter(publish_time) 
  AND node_id = '$node' 
  AND event = 'diagnostic/v2' 
  AND elems1 ? 'GONK' 
  AND is_valid_json(message) 
  AND is_valid_time(message)

GROUP BY 1, 2
ORDER BY 1

# Update Time

SELECT
  max(time) as Time,
  EXTRACT(EPOCH FROM (now() - max(time))) AS "Time Since Last Heard"
FROM $project_key.data
WHERE
  node_id = '$node'
  AND time <= now()
ORDER BY 1;


# SoC

SELECT
  to_timestamp((message::json->'Diagnostic'->>'Time')::int) as "time",
  max((elems1->'GONK'->'SoC')::float) AS "SoC",
  max((elems1->'GONK'->'CellVAvg')::float/1000) AS "Battery",
  max((elems2->'Kestrel'->'PORT_V'->3)::float) AS "Solar"
FROM $project_key.raw, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems1, jsonb_array_elements((message::jsonb)->'Diagnostic'->'Devices') elems2
WHERE
  $__timeFilter("publish_time") AND node_id = '$node' AND event = 'diagnostic/v2' 
  AND (elems1 ? 'GONK' OR elems2 ? 'Kestrel')
  AND is_valid_json(message) 
  AND is_valid_time(message)
GROUP BY 1
ORDER BY 1

# Location

SELECT
  time,
  node_id,
  display_name,
  metric,
  value
FROM
(SELECT
  ROW_NUMBER() OVER (PARTITION BY node_id, measure ORDER BY time DESC) r,
  time,
  value,
  measure as "metric",
  node_id,
  display_name
FROM $project_key.data
WHERE
  node_id = '$node'
  AND measure IN ('Longitude', 'Latitude')
) x
WHERE x.r <= 1
ORDER BY x.time ASC

# Atmospheric

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%HAAR.SHT31%' or measure ilike '%HAAR.DPS368.Press%')
ORDER BY time )
UNION
(
with temp as (
select time, value as "temp"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Temperature.2.1'
), hum as (
select time, value as "hum"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.SHT31.Humidity.2.1'
), press as (
select time, value as "press"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'HAAR.DPS368.Pressure.2.1'
),
transposed_and_flagged as (
select press.time, join1.temp, join1.hum, press.press,
case
when (join1.temp < $HaarTempMin or
join1.temp > $HaarTempMax or
join1.temp is null or
join1.hum < $HaarRHMin or
join1.hum > $HaarRHMax or
join1.hum is null or
press.press < $HaarPresMin or
press.press > $HaarPresMax or
press.press is null) then 1
else 0
end as range_flag
from press
join (select temp.time, temp.temp, hum.hum from temp join hum on temp.time = hum.time) as join1
on join1.time = press.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
pressure_observations as (
  SELECT
    "time" AS pressure_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.1'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.1'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.1'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (pressure_observation IS NULL) then 1
    WHEN (humidity_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN pressure_observations ON time = pressure_observation 
  LEFT JOIN humidity_observations ON time = humidity_observation 
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%HAAR.SHT31%' or measure ilike '%HAAR.DPS368.Press%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

#Soil

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
ORDER BY time )
UNION
(
with st as (
select time, value as "st"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.Temperature.1.1'
), svwc as (
select time, value as "svwc"
from $project_key."data"
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Acclima Soil.VWC.1.1'
),
transposed_and_flagged as (
select svwc.time, join1.st, join1.svwc,
case
when (join1.st < $TDR315H_ST_MIN or
join1.st > $TDR315H_ST_MAX or
join1.st is null or
svwc.svwc < $TDR315H_VWC_MIN or
svwc.svwc > $TDR315H_VWC_MAX or
svwc.svwc is null) then 1
else 0
end as range_flag
from svwc
join (select st.time, st.st, svwc.svwc from st join svwc on st.time = svwc.time) as join1
on join1.time = svwc.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
vwc_observations as (
  SELECT
    "time" AS vwc_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
),
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (vwc_observation IS NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN vwc_observations ON time = vwc_observation  
  LEFT JOIN temperature_observations ON time = temperature_observation
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# Hedorah CO2

(
(
(SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND measure = 'Hedorah.CO2.2.4'
ORDER BY time )
UNION
(
with oxygen as (
select time, value as "oxygen"
FROM $project_key.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Apogee O2.Oxygen_%.1.4'
), carbon as (
select time, value as "carbon"
FROM $project_key.data
where $__timeFilter(time)
and node_id = '$node'
and measure = 'Hedorah.CO2.2.4'
),
transposed_and_flagged as (
select carbon.time, join1.oxygen, join1.carbon,
case
when (join1.oxygen < $Apogee_SO421_min or
join1.oxygen > $Apogee_SO421_max or
join1.oxygen is null or
carbon.carbon < $hedorah_CO2_min or
carbon.carbon > $hedorah_CO2_max or
carbon.carbon is null) then 1
else 0
end as range_flag
from carbon
join (select oxygen.time, oxygen.oxygen, carbon.carbon from oxygen join carbon on oxygen.time = carbon.time) as join1
on join1.time = carbon.time
)
select time, range_flag as value, 'Value Out of Range Flag' as metric
from transposed_and_flagged
order by time
)
ORDER BY 1
)
UNION
(
WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Oxygen_%.1.4'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah.CO2.2.4'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN ox_observations ON time = ox_observation 
  LEFT JOIN hed_observations ON time = hed_observation 
) ORDER BY 1
)
UNION
(
WITH std_dev_timestamps as (
  SELECT
    DISTINCT "time" as std_dev_timestamp
  FROM 
  (
    SELECT
      "time",
      value,
      avg(value) over w as _avg,
      stddev(value) over w as _stddev,
      measure
    FROM $project_key.data
    WHERE
      $__timeFilter(time)
      AND node_id = '$node'
      AND (measure = 'Apogee O2.Oxygen_%.1.4' OR measure = 'Hedorah.CO2.2.4')
    WINDOW w AS (partition by measure, time_bucket(INTERVAL '$window minutes', "time"))
    ORDER BY time
  ) AS d
  WHERE
  abs(value - _avg) > (('$stddev')::numeric)*_stddev
),
message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
)
SELECT 
  "time",
  CASE
    WHEN (std_dev_timestamp is NULL) then 0
    ELSE 1
  END AS value,
  'Standard Deviation Warning Flag' as metric
FROM message_timestamps LEFT JOIN std_dev_timestamps on "time" = std_dev_timestamp
ORDER BY 1
)
ORDER BY 1

# Gas - Auxiliary

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure = 'Apogee O2.Temperature.1.4' OR measure = 'Hedorah.Temperature.2.4' OR measure = 'Hedorah.Humidity.2.4')
ORDER BY time

## All Data

# query Raw data

(
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Temperature.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.VWC.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_BULK.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.EC_PORE.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Acclima Soil.Permitivity.1.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_%.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Temperature.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Apogee O2.Oxygen_mV.1.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.CO2.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.Temperature.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.DPS368.Pressure.2.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Humidity.2.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'HAAR.SHT31.Temperature.2.1'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Hedorah.Humidity.2.4'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Blue.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Clear.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Green.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.IR.15'
UNION
SELECT
  "time" AS "time",
  value,
  measure as "metric"
FROM $project_key.data
WHERE
  $__timeFilter("time")
  AND node_id = '$node'
  AND measure = 'Kestrel.ALS.Red.15'
  )
ORDER BY 1

# query Daily Operations

WITH operating_days as (
  SELECT DISTINCT date_trunc('day', time) as operating_day
  FROM $project_key.data
  WHERE $__timeFilter("time") AND node_id = '$node'
  ORDER BY 1
), 
range_days as (
  SELECT range_day
  FROM generate_series('${__from:date:YYYY-MM-DD}'::date, '${__to:date:YYYY-MM-DD}'::date, '1 day') as range_day
  ORDER BY 1
)
SELECT
  range_day as time,
  CASE 
    WHEN (operating_day IS NULL) then 1
    ELSE 0
  END as "Daily Operations Flag"
FROM range_days LEFT JOIN operating_days ON range_day = operating_day
ORDER BY range_day

# query Missing Value

WITH message_timestamps as (
  SELECT
    DISTINCT "time" AS "time"
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND node_id = '$node'
    AND measure NOT ILIKE 'altitude'
    AND measure NOT ILIKE 'latitude'
    AND measure NOT ILIKE 'longitude'
  ORDER BY 1
), 
t1_observations as (
  SELECT
    "time" AS t1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Temperature.1.1'
    AND node_id = '$node'
), 
v1_observations as (
  SELECT
    "time" AS v1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.VWC.1.1'
    AND node_id = '$node'
), 
ec1_observations as (
  SELECT
    "time" AS ec1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_BULK.1.1'
    AND node_id = '$node'
), 
ep1_observations as (
  SELECT
    "time" AS ep1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.EC_PORE.1.1'
    AND node_id = '$node'
), 
perm1_observations as (
  SELECT
    "time" AS perm1_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Acclima Soil.Permitivity.1.1'
    AND node_id = '$node'
), 
ox_observations as (
  SELECT
    "time" AS ox_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Apogee O2.Oxygen_%.1.4'
    AND node_id = '$node'
), 
hed_observations as (
  SELECT
    "time" AS hed_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'Hedorah.CO2.2.4'
    AND node_id = '$node'
), 
pressure_observations as (
  SELECT
    "time" AS pressure_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.DPS368.Pressure.2.1'
    AND node_id = '$node'
),
humidity_observations as (
  SELECT
    "time" AS humidity_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Humidity.2.1'
    AND node_id = '$node'
), 
temperature_observations as (
  SELECT
    "time" AS temperature_observation
  FROM $project_key.data
  WHERE
    $__timeFilter("time")
    AND data.measure = 'HAAR.SHT31.Temperature.2.1'
    AND node_id = '$node'
)
SELECT 
  "time",
  CASE
    WHEN (t1_observation IS NULL) then 1
    WHEN (v1_observation is NULL) then 1
    WHEN (ec1_observation is NULL) then 1
    WHEN (ep1_observation is NULL) then 1
    WHEN (perm1_observation is NULL) then 1
    WHEN (ox_observation is NULL) then 1
    WHEN (hed_observation is NULL) then 1
    WHEN (temperature_observation is NULL) then 1
    WHEN (humidity_observation is NULL) then 1
    WHEN (pressure_observation is NULL) then 1
    ELSE 0
  END AS value,
  'Missing Value Flag' as metric
FROM message_timestamps 
  LEFT JOIN t1_observations ON time = t1_observation
  LEFT JOIN v1_observations ON time = v1_observation 
  LEFT JOIN ec1_observations ON time = ec1_observation
  LEFT JOIN ep1_observations ON time = ep1_observation
  LEFT JOIN perm1_observations ON time = perm1_observation
  LEFT JOIN ox_observations ON time = ox_observation
  LEFT JOIN hed_observations ON time = hed_observation
  LEFT JOIN humidity_observations ON time = humidity_observation
  LEFT JOIN temperature_observations ON time = temperature_observation
  LEFT JOIN pressure_observations ON time = pressure_observation
ORDER BY 1

# Atmospheric Stat

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%HAAR.SHT31%' or measure ilike '%HAAR.DPS368.Press%')
ORDER BY 1

# Soil Stat

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND (measure ilike '%Acclima Soil.VWC.1.1%' or measure ilike '%Acclima Soil.Temperature.1.1%')
ORDER BY 1

# Hedorah CO2 Stat

SELECT
  "time",
  value,
  measure AS "metric"
FROM $project_key.data
WHERE
  $__timeFilter(time)
  AND node_id = '$node'
  AND measure = 'Hedorah.CO2.2.4'
ORDER BY 1